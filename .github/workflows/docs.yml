name: Documentation Build & Deploy

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - 'src/lib/**'
      - 'mkdocs.yml'
      - 'typedoc.json'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [main]
    paths:
      - 'docs/**'
      - 'src/lib/**'
      - 'mkdocs.yml'
      - 'typedoc.json'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build Documentation
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Python for MkDocs
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install Python dependencies
        run: |
          pip install -r docs/requirements.txt
      
      - name: Generate TypeScript API Reference
        run: |
          npx typedoc
      
      - name: Validate documentation links
        run: |
          find docs -name "*.md" -exec grep -l "](\./" {} \; | \
          xargs -I {} python scripts/validate-links.py {}
      
      - name: Build MkDocs site
        run: |
          mkdocs build --clean --strict
      
      - name: Upload documentation artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./site

  # Deploy to GitHub Pages (only on main branch)
  deploy-pages:
    if: github.ref == 'refs/heads/main'
    needs: build-docs
    runs-on: ubuntu-latest
    permissions:
        pages: write
        id-token: write
    environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Validate Documentation Quality
  validate-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Spell check documentation
        run: |
          npx cspell "docs/**/*.md"
      
      - name: Check TypeScript documentation coverage
        run: |
          npx typedoc --listInvalidSymbolLinks
      
      - name: Validate Markdown formatting
        uses: DavidAnson/markdownlint-cli2-action@v16   # <-- fixed action
        with:
          globs: |
            docs/**/*.md
          config: .markdownlint.json
      
      - name: Check for TODO items in documentation
        run: |
          echo "## Documentation TODOs" >> $GITHUB_STEP_SUMMARY
          grep -r "TODO:" docs/ || echo "No TODOs found" >> $GITHUB_STEP_SUMMARY

  # Security scan for documentation
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './docs'
          format: 'sarif'
          output: 'trivy-docs.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-docs.sarif'
